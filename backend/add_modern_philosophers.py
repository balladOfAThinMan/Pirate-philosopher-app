#!/usr/bin/env python3
"""
Script para a√±adir fil√≥sofos modernos y contempor√°neos de primera l√≠nea que faltan
"""

import os
import sys
sys.path.append('/opt/app')

from app.database import SessionLocal
from app.models import Author, School, Book, Quote
from datetime import date

# Fil√≥sofos modernos de primera l√≠nea a a√±adir con biograf√≠as detalladas
NEW_MODERN_PHILOSOPHERS = {
    "Jos√© Ortega y Gasset": {
        "biografia": "Fil√≥sofo espa√±ol del siglo XX, figura central de la filosof√≠a hispana. Desarroll√≥ el perspectivismo y el concepto de 'raz√≥n vital'. Su obra 'La rebeli√≥n de las masas' analiza la sociedad de masas moderna. Fund√≥ la Revista de Occidente, crucial para la modernizaci√≥n intelectual de Espa√±a.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1883, 5, 9),
        "fecha_defuncion": date(1955, 10, 18)
    },
    
    "Mar√≠a Zambrano": {
        "biografia": "Fil√≥sofa espa√±ola disc√≠pula de Ortega y Gasset. Desarroll√≥ una filosof√≠a po√©tica que integra raz√≥n y coraz√≥n. Su 'raz√≥n po√©tica' busca superar la crisis de la raz√≥n moderna. Exiliada durante el franquismo, es una de las pensadoras m√°s originales del siglo XX.",
        "epoca": "Contempor√°nea", 
        "fecha_nacimiento": date(1904, 4, 22),
        "fecha_defuncion": date(1991, 2, 6)
    },
    
    "Miguel de Unamuno": {
        "biografia": "Fil√≥sofo y escritor espa√±ol, figura clave de la Generaci√≥n del 98. Su obra 'Del sentimiento tr√°gico de la vida' explora la tensi√≥n entre raz√≥n y fe. Desarroll√≥ el concepto de 'intrahistoria' y explor√≥ temas existenciales como la inmortalidad y la agon√≠a del cristianismo.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1864, 9, 29), 
        "fecha_defuncion": date(1936, 12, 31)
    },
    
    "Henri Bergson": {
        "biografia": "Fil√≥sofo franc√©s Premio Nobel de Literatura 1927. Desarroll√≥ una filosof√≠a vitalista que enfatiza la intuici√≥n sobre el intelecto. Sus obras sobre el tiempo, la memoria y la evoluci√≥n creadora influyeron profundamente en la filosof√≠a y las artes del siglo XX.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1859, 10, 18),
        "fecha_defuncion": date(1941, 1, 4)
    },
    
    "Bertrand Russell": {
        "biografia": "Fil√≥sofo, l√≥gico y matem√°tico brit√°nico, Premio Nobel de Literatura 1950. Junto con Whitehead desarroll√≥ los 'Principia Mathematica'. Sus contribuciones a la l√≥gica, filosof√≠a del lenguaje y epistemolog√≠a fueron fundamentales. Tambi√©n fue activista pacifista y social.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1872, 5, 18),
        "fecha_defuncion": date(1970, 2, 2)
    },
    
    "William James": {
        "biografia": "Fil√≥sofo y psic√≥logo estadounidense, fundador del pragmatismo junto con Pierce y Dewey. Desarroll√≥ el 'empirismo radical' y estudios pioneros sobre experiencia religiosa y conciencia. Su teor√≠a de la verdad como 'lo que funciona' influy√≥ enormemente en la filosof√≠a americana.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1842, 1, 11),
        "fecha_defuncion": date(1910, 8, 26)
    },
    
    "John Dewey": {
        "biografia": "Fil√≥sofo estadounidense, principal exponente del pragmatismo. Revolucion√≥ la educaci√≥n con su filosof√≠a 'aprender haciendo'. Sus trabajos sobre democracia, educaci√≥n y experiencia lo convierten en una figura fundamental del pensamiento progresista americano.",
        "epoca": "Contempor√°nea", 
        "fecha_nacimiento": date(1859, 10, 20),
        "fecha_defuncion": date(1952, 6, 1)
    },
    
    "Max Weber": {
        "biografia": "Soci√≥logo, economista y fil√≥sofo alem√°n, figura fundacional de la sociolog√≠a moderna. Su '√âtica protestante y el esp√≠ritu del capitalismo' es fundamental para entender la modernidad. Desarroll√≥ conceptos como 'tipos ideales', 'desencantamiento del mundo' y an√°lisis de la burocracia.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1864, 4, 21),
        "fecha_defuncion": date(1920, 6, 14)
    },
    
    "Alfred North Whitehead": {
        "biografia": "Matem√°tico y fil√≥sofo brit√°nico, coautor con Russell de los 'Principia Mathematica'. Desarroll√≥ la 'filosof√≠a del proceso', una metaf√≠sica que ve la realidad como constituida por procesos antes que sustancias. Su pensamiento influy√≥ en teolog√≠a, cosmolog√≠a y filosof√≠a de la ciencia.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1861, 2, 15),
        "fecha_defuncion": date(1947, 12, 30)
    },
    
    "Hans-Georg Gadamer": {
        "biografia": "Fil√≥sofo alem√°n, principal exponente de la hermen√©utica filos√≥fica. Su obra 'Verdad y m√©todo' revolucion√≥ la comprensi√≥n de la interpretaci√≥n. Desarroll√≥ conceptos como 'fusi√≥n de horizontes' y 'c√≠rculo hermen√©utico', fundamentales para las ciencias humanas y la filosof√≠a continental.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1900, 2, 11),
        "fecha_defuncion": date(2002, 3, 13)
    },
    
    "Paul Ricoeur": {
        "biografia": "Fil√≥sofo franc√©s que integr√≥ hermen√©utica, fenomenolog√≠a y estructuralismo. Sus trabajos sobre narratividad, memoria e identidad personal son fundamentales. Desarroll√≥ una 'hermen√©utica del s√≠ mismo' y contribuy√≥ significativamente a la filosof√≠a del lenguaje y la √©tica.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1913, 2, 27),
        "fecha_defuncion": date(2005, 5, 20)
    },
    
    "Walter Benjamin": {
        "biografia": "Fil√≥sofo y cr√≠tico cultural alem√°n asociado con la Escuela de Frankfurt. Sus ensayos sobre arte, literatura y cultura moderna, como 'La obra de arte en la √©poca de su reproductibilidad t√©cnica', fueron revolucionarios. Su pensamiento combina marxismo, misticismo jud√≠o y cr√≠tica est√©tica.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1892, 7, 15),
        "fecha_defuncion": date(1940, 9, 26)
    },
    
    "Antonio Gramsci": {
        "biografia": "Fil√≥sofo y te√≥rico pol√≠tico italiano, fundador del Partido Comunista Italiano. Desarroll√≥ conceptos como 'hegemon√≠a cultural' y 'intelectual org√°nico'. Sus 'Cuadernos de la c√°rcel', escritos durante su encarcelamiento fascista, renovaron profundamente la teor√≠a marxista.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1891, 1, 22),
        "fecha_defuncion": date(1937, 4, 27)
    },
    
    "Michel Foucault": {
        "biografia": "Fil√≥sofo franc√©s del siglo XX, figura clave del postestructuralismo. Sus an√°lisis sobre poder, saber y sexualidad revolucionaron las ciencias humanas. Obras como 'Historia de la locura', 'Vigilar y castigar' y 'Historia de la sexualidad' influyeron profundamente en filosof√≠a, sociolog√≠a e historia.",
        "epoca": "Contempor√°nea",
        "fecha_nacimiento": date(1926, 10, 15),
        "fecha_defuncion": date(1984, 6, 25)
    }
}

def add_modern_philosophers():
    """A√±ade fil√≥sofos modernos de primera l√≠nea a la base de datos"""
    
    session = SessionLocal()
    
    print("‚ûï A√ëADIENDO FIL√ìSOFOS MODERNOS DE PRIMERA L√çNEA")
    print("=" * 60)
    
    try:
        added_count = 0
        already_exists_count = 0
        
        # Obtener una escuela por defecto para asignar
        default_school = session.query(School).first()
        
        for name, data in NEW_MODERN_PHILOSOPHERS.items():
            print(f"\n‚ûï Procesando {name}...")
            
            # Verificar si ya existe
            existing_author = session.query(Author).filter(Author.nombre == name).first()
            
            if existing_author:
                print(f"‚ö†Ô∏è {name} ya existe en la base de datos")
                already_exists_count += 1
                continue
            
            # Crear nuevo autor
            new_author = Author(
                nombre=name,
                epoca=data["epoca"],
                fecha_nacimiento=data["fecha_nacimiento"],
                fecha_defuncion=data["fecha_defuncion"],
                imagen_url=f"https://ui-avatars.com/api/?name={name.replace(' ', '+')}&background=random&size=300",
                biografia=data["biografia"]
            )
            
            # Asignar escuela por defecto
            if default_school:
                new_author.schools.append(default_school)
            
            session.add(new_author)
            session.flush()  # Para obtener el ID
            
            # Crear libro asociado
            book = Book(
                titulo=f"Obras de {name}",
                imagen_url=f"https://ui-avatars.com/api/?name={name.replace(' ', '+')[:15]}&background=green&color=white&size=200",
                descripcion=f"Recopilaci√≥n de las principales obras de {name}",
                autor_id=new_author.id
            )
            session.add(book)
            
            # Crear cita asociada
            quote = Quote(
                texto=f"Reflexi√≥n filos√≥fica de {name}",
                autor_id=new_author.id
            )
            session.add(quote)
            
            added_count += 1
            print(f"‚úÖ {name}: A√±adido exitosamente")
            print(f"   üìÖ {data['fecha_nacimiento'].year}-{data['fecha_defuncion'].year if data['fecha_defuncion'] else 'presente'}")
            print(f"   üìù {data['biografia'][:80]}...")
        
        # Commit cambios
        session.commit()
        
        # Verificar total final
        total_authors = session.query(Author).count()
        
        print(f"\nüéâ ¬°A√ëADIDOS FIL√ìSOFOS MODERNOS!")
        print(f"=" * 50)
        print(f"üìä RESUMEN:")
        print(f"Fil√≥sofos a√±adidos: {added_count}")
        print(f"Ya exist√≠an: {already_exists_count}")
        print(f"Total fil√≥sofos procesados: {len(NEW_MODERN_PHILOSOPHERS)}")
        print(f"Total autores en la base de datos: {total_authors}")
        
        print(f"\n‚úÖ RESULTADO:")
        print(f"üìö La base ahora incluye los fil√≥sofos modernos m√°s importantes")
        print(f"üåç Representaci√≥n mejorada de la filosof√≠a hispana, francesa, alemana y anglosajona")
        
    except Exception as e:
        print(f"‚ùå Error durante la adici√≥n: {e}")
        session.rollback()
    finally:
        session.close()

if __name__ == "__main__":
    add_modern_philosophers()